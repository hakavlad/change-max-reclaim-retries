From a8a38618fc1a6b448d96679d1d2f571093387d79 Mon Sep 17 00:00:00 2001
From: Alexey Avramov <hakavlad@gmail.com>
Date: Sun, 7 Mar 2021 23:47:00 +0900
Subject: [PATCH] mm: Replace MAX_RECLAIM_RETRIES by vm.max_reclaim_retries

This patch replaces MAX_RECLAIM_RETRIES in `mm/internal.h` by a new
sysctl knob `vm.max_reclaim_retries` with default value 0.
---
 include/linux/mm.h |  1 +
 kernel/sysctl.c    | 14 ++++++++++++++
 mm/Kconfig         |  8 ++++++++
 mm/internal.h      |  2 +-
 4 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/include/linux/mm.h b/include/linux/mm.h
index db6ae4d3f..8d401ee1b 100644
--- a/include/linux/mm.h
+++ b/include/linux/mm.h
@@ -201,6 +201,7 @@ static inline void __mm_zero_struct_page(struct page *page)
 #define DEFAULT_MAX_MAP_COUNT	(USHRT_MAX - MAPCOUNT_ELF_CORE_MARGIN)
 
 extern int sysctl_max_map_count;
+extern int sysctl_max_reclaim_retries;
 
 extern unsigned long sysctl_user_reserve_kbytes;
 extern unsigned long sysctl_admin_reserve_kbytes;
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index afad08596..c5ea478ec 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -137,6 +137,12 @@ static int minolduid;
 static int ngroups_max = NGROUPS_MAX;
 static const int cap_last_cap = CAP_LAST_CAP;
 
+#if CONFIG_MAX_RECLAIM_RETRIES < 0
+#error "CONFIG_MAX_RECLAIM_RETRIES should be >= 0"
+#endif
+int sysctl_max_reclaim_retries __read_mostly =
+	CONFIG_MAX_RECLAIM_RETRIES;
+
 /*
  * This is needed for proc_doulongvec_minmax of sysctl_hung_task_timeout_secs
  * and hung_task_check_interval_secs
@@ -2777,6 +2783,14 @@ static struct ctl_table vm_table[] = {
 		.extra1		= SYSCTL_ZERO,
 	},
 	{
+		.procname	= "max_reclaim_retries",
+		.data		= &sysctl_max_reclaim_retries,
+		.maxlen		= sizeof(sysctl_max_reclaim_retries),
+		.mode		= 0644,
+		.proc_handler	= proc_dointvec_minmax,
+		.extra1		= SYSCTL_ZERO,
+	},
+	{
 		.procname	= "swappiness",
 		.data		= &vm_swappiness,
 		.maxlen		= sizeof(vm_swappiness),
diff --git a/mm/Kconfig b/mm/Kconfig
index 390165ffb..b0dd9cd39 100644
--- a/mm/Kconfig
+++ b/mm/Kconfig
@@ -79,6 +79,14 @@ config FLAT_NODE_MEM_MAP
 	def_bool y
 	depends on !SPARSEMEM
 
+config MAX_RECLAIM_RETRIES
+	int "Default value for vm.max_reclaim_retries"
+	depends on SYSCTL
+	default "0"
+	help
+	  This is maximum number of reclaim retries without progress before
+	  the OOM killer is consider the only way forward.
+
 #
 # Both the NUMA code and DISCONTIGMEM use arrays of pg_data_t's
 # to represent different areas of memory.  This variable allows
diff --git a/mm/internal.h b/mm/internal.h
index c43ccdddb..e9ce65f00 100644
--- a/mm/internal.h
+++ b/mm/internal.h
@@ -103,7 +103,7 @@ extern unsigned long highest_memmap_pfn;
  * Maximum number of reclaim retries without progress before the OOM
  * killer is consider the only way forward.
  */
-#define MAX_RECLAIM_RETRIES 16
+#define MAX_RECLAIM_RETRIES sysctl_max_reclaim_retries
 
 /*
  * in mm/vmscan.c:
-- 
2.11.0

